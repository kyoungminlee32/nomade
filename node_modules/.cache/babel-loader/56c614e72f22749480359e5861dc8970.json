{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\uD504\\uB860\\uBE44\\uC988\\\\Desktop\\\\nomade\\\\src\\\\components\\\\Collapsible.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from \"react\";\nimport \"./../Collapsible.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Collapsible(props) {\n  _s();\n\n  const [isOpen, setIsOpen] = useState(false);\n\n  const Toggle = () => setIsOpen(!isOpen); // const scrollHeight = docuement.getElementById(\"parent\").scrollHeight;\n\n\n  const parentRef = useRef();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"collapsible\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"toggle\",\n      onClick: Toggle,\n      children: props.label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-parent\",\n      ref: parentRef,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: props.children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Collapsible, \"kKtPwKautdixg2wiBy3RltIbe1c=\");\n\n_c = Collapsible;\nexport default Collapsible;\n\nvar _c;\n\n$RefreshReg$(_c, \"Collapsible\");","map":{"version":3,"sources":["C:/Users/프론비즈/Desktop/nomade/src/components/Collapsible.js"],"names":["React","useState","useRef","Collapsible","props","isOpen","setIsOpen","Toggle","parentRef","label","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAwBC,MAAxB,QAAqC,OAArC;AACA,OAAO,sBAAP;;;AAEA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAAA;;AACxB,QAAM,CAACC,MAAD,EAAQC,SAAR,IAAqBL,QAAQ,CAAC,KAAD,CAAnC;;AACA,QAAMM,MAAM,GAAG,MAAMD,SAAS,CAAC,CAACD,MAAF,CAA9B,CAFwB,CAGxB;;;AACA,QAAMG,SAAS,GAAGN,MAAM,EAAxB;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA,4BACI;AAAQ,MAAA,SAAS,EAAC,QAAlB;AAA2B,MAAA,OAAO,EAAEK,MAApC;AAAA,gBACKH,KAAK,CAACK;AADX;AAAA;AAAA;AAAA;AAAA,YADJ,EAIKJ,MAAM,iBACP;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAgC,MAAA,GAAG,EAAEG,SAArC;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA,kBAA0BJ,KAAK,CAACM;AAAhC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH;;GAjBQP,W;;KAAAA,W;AAmBT,eAAeA,WAAf","sourcesContent":["import React, {useState,useRef} from \"react\";\r\nimport \"./../Collapsible.css\";\r\n\r\nfunction Collapsible(props) {\r\n    const [isOpen,setIsOpen] = useState(false);\r\n    const Toggle = () => setIsOpen(!isOpen);\r\n    // const scrollHeight = docuement.getElementById(\"parent\").scrollHeight;\r\n    const parentRef = useRef();\r\n\r\n    return (\r\n        <div className=\"collapsible\">\r\n            <button className=\"toggle\" onClick={Toggle}>\r\n                {props.label}\r\n            </button>\r\n            {isOpen && \r\n            <div className=\"content-parent\" ref={parentRef}>\r\n                <div className=\"content\">{props.children}</div>\r\n            </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Collapsible;"]},"metadata":{},"sourceType":"module"}