{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\uD504\\uB860\\uBE44\\uC988\\\\Desktop\\\\nomade\\\\src\\\\components\\\\Collapsible.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from \"react\";\nimport \"./../Collapsible.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Collapsible(props) {\n  _s();\n\n  const [isOpen, setIsOpen] = useState(false);\n\n  const Toggle = () => setIsOpen(!isOpen); // const scrollHeight = docuement.getElementById(\"parent\").scrollHeight;\n\n\n  const parentRef = useRef(); // if(parentRef.current) {\n  //     console.log(parentRef.current.scrollHeight);\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"collapsible\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"toggle\",\n      onClick: this.Toggle,\n      children: props.label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-parent\",\n      ref: parentRef,\n      style: isOpen ? {\n        height: parentRef.current.scrollHeight + \"px\"\n      } : {\n        height: \"0px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: props.children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Collapsible, \"kKtPwKautdixg2wiBy3RltIbe1c=\");\n\n_c = Collapsible;\nexport default Collapsible;\n\nvar _c;\n\n$RefreshReg$(_c, \"Collapsible\");","map":{"version":3,"sources":["C:/Users/프론비즈/Desktop/nomade/src/components/Collapsible.jsx"],"names":["React","useState","useRef","Collapsible","props","isOpen","setIsOpen","Toggle","parentRef","label","height","current","scrollHeight","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAwBC,MAAxB,QAAqC,OAArC;AACA,OAAO,sBAAP;;;AAEA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAAA;;AACxB,QAAM,CAACC,MAAD,EAAQC,SAAR,IAAqBL,QAAQ,CAAC,KAAD,CAAnC;;AACA,QAAMM,MAAM,GAAG,MAAMD,SAAS,CAAC,CAACD,MAAF,CAA9B,CAFwB,CAGxB;;;AACA,QAAMG,SAAS,GAAGN,MAAM,EAAxB,CAJwB,CAKxB;AACA;AACA;;AACA,sBACI;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA,4BACI;AAAQ,MAAA,SAAS,EAAC,QAAlB;AAA2B,MAAA,OAAO,EAAE,KAAKK,MAAzC;AAAA,gBACKH,KAAK,CAACK;AADX;AAAA;AAAA;AAAA;AAAA,YADJ,eAII;AACI,MAAA,SAAS,EAAC,gBADd;AAEI,MAAA,GAAG,EAAED,SAFT;AAGI,MAAA,KAAK,EACDH,MAAM,GACA;AACEK,QAAAA,MAAM,EAACF,SAAS,CAACG,OAAV,CAAkBC,YAAlB,GAAiC;AAD1C,OADA,GAGE;AACAF,QAAAA,MAAM,EAAC;AADP,OAPhB;AAAA,6BAYI;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA,kBAA0BN,KAAK,CAACS;AAAhC;AAAA;AAAA;AAAA;AAAA;AAZJ;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAqBH;;GA7BQV,W;;KAAAA,W;AA+BT,eAAeA,WAAf","sourcesContent":["import React, {useState,useRef} from \"react\";\r\nimport \"./../Collapsible.css\";\r\n\r\nfunction Collapsible(props) {\r\n    const [isOpen,setIsOpen] = useState(false);\r\n    const Toggle = () => setIsOpen(!isOpen);\r\n    // const scrollHeight = docuement.getElementById(\"parent\").scrollHeight;\r\n    const parentRef = useRef();\r\n    // if(parentRef.current) {\r\n    //     console.log(parentRef.current.scrollHeight);\r\n    // }\r\n    return (\r\n        <div className=\"collapsible\">\r\n            <button className=\"toggle\" onClick={this.Toggle}>\r\n                {props.label}\r\n            </button>\r\n            <div \r\n                className=\"content-parent\" \r\n                ref={parentRef} \r\n                style={\r\n                    isOpen \r\n                        ? {\r\n                            height:parentRef.current.scrollHeight + \"px\"\r\n                        } : {\r\n                            height:\"0px\"\r\n                        }\r\n                }\r\n            >\r\n                <div className=\"content\">{props.children}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Collapsible;"]},"metadata":{},"sourceType":"module"}