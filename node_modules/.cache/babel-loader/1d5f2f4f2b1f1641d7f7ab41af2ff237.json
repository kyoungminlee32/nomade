{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\uD504\\uB860\\uBE44\\uC988\\\\Desktop\\\\nomade\\\\src\\\\components\\\\Collapsible.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Collapsible(_ref) {\n  _s();\n\n  let {\n    label\n  } = _ref;\n  const [isOpen, setIsOpen] = useState(false);\n\n  const Toggle = () => setIsOpen(!isOpen);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"collapsible\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"toggle\",\n      onClick: Toggle,\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 24\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Collapsible, \"K4MA9akBn/hvxyj0MRX3sG61gfg=\");\n\n_c = Collapsible;\nexport default Collapsible;\n\nvar _c;\n\n$RefreshReg$(_c, \"Collapsible\");","map":{"version":3,"sources":["C:/Users/프론비즈/Desktop/nomade/src/components/Collapsible.js"],"names":["React","useState","Collapsible","label","isOpen","setIsOpen","Toggle","props","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;;AAEA,SAASC,WAAT,OAA8B;AAAA;;AAAA,MAAT;AAACC,IAAAA;AAAD,GAAS;AAC1B,QAAM,CAACC,MAAD,EAAQC,SAAR,IAAqBJ,QAAQ,CAAC,KAAD,CAAnC;;AACA,QAAMK,MAAM,GAAG,MAAMD,SAAS,CAAC,CAACD,MAAF,CAA9B;;AACA,sBACI;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA,4BACI;AAAQ,MAAA,SAAS,EAAC,QAAlB;AAA2B,MAAA,OAAO,EAAEE,MAApC;AAAA,gBAA6CH;AAA7C;AAAA;AAAA;AAAA;AAAA,YADJ,EAEKC,MAAM,iBAAI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,gBAA0BG,KAAK,CAACC;AAAhC;AAAA;AAAA;AAAA;AAAA,YAFf;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH;;GATQN,W;;KAAAA,W;AAWT,eAAeA,WAAf","sourcesContent":["import React, {useState} from \"react\";\r\n\r\nfunction Collapsible({label}) {\r\n    const [isOpen,setIsOpen] = useState(false);\r\n    const Toggle = () => setIsOpen(!isOpen);\r\n    return (\r\n        <div className=\"collapsible\">\r\n            <button className=\"toggle\" onClick={Toggle}>{label}</button>\r\n            {isOpen && <div className=\"content\">{props.children}</div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Collapsible;"]},"metadata":{},"sourceType":"module"}